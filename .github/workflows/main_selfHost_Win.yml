name: CI Win self-hosted

on:
  push:
    branches: [ master ]

  workflow_dispatch:
    inputs:
      max-samples:
        description: "Limit training samples"
        required: false
        default: "500"

      report:
        description: "Generate evaluation report?"
        type: boolean          # <-- valid input types are boolean | choice | environment | string
        required: false
        default: true

      image-size:
        description: "Size of the images"
        required: false
        default: "224"

      batch-size:
        description: "Batch size for training"
        required: false
        default: "16"

      num-workers:
        description: "Number of workers for data loading"
        required: false
        default: "6"

      backbone:
        description: "Model backbone"
        type: choice
        options:
          - resnet18
          - resnet50
          - efficientnet_b0
        required: false
        default: resnet50

      epochs:
        description: "Number of training epochs"
        required: false
        default: "30"

      early-stop-patience:
        description: "Patience for early stopping"
        required: false
        default: "7"

jobs:
  run-pipeline:
    # Exact labels must match the runner service: first "self-hosted", then OS label(s)
    runs-on: [ self-hosted, Windows ]

    defaults:
      run:
        shell: powershell

    steps:
      # 1 Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2 Set up Python
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # 3 Install third-party and local deps
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .

      # 4 Run the training / evaluation pipeline
      - name: Run pipeline
        env:
          MAX_SAMPLES: ${{ github.event.inputs.max-samples || '500' }}
          REPORT:      ${{ github.event.inputs.report      || 'true' }}
          IMAGE_SIZE:  ${{ github.event.inputs.image-size || '224' }}
          BATCH_SIZE:  ${{ github.event.inputs.batch-size || '16' }}
          NUM_WORKERS: ${{ github.event.inputs.num-workers || '6' }}
          BACKBONE:    ${{ github.event.inputs.backbone || 'resnet50' }}
          EPOCHS:      ${{ github.event.inputs.epochs || '30' }}
          EARLY_STOP_PATIENCE: ${{ github.event.inputs.early-stop-patience || '7' }}

        run: |
          $reportFlag = if ($env:REPORT -eq 'true') { '--report' } else { '' }
          python scripts/run_pipeline.py `
            --max-samples $env:MAX_SAMPLES `
            --image-size $env:IMAGE_SIZE `
            --batch-size $env:BATCH_SIZE `
            --num-workers $env:NUM_WORKERS `
            --backbone $env:BACKBONE `
            --epochs $env:EPOCHS `
            --early-stop-patience $env:EARLY_STOP_PATIENCE `
            $reportFlag

      # 5 Upload useful artifacts
      - name: Upload training artifacts
        uses: actions/upload-artifact@v4
        with:
          name: training-artifacts
          path: |
            checkpoints/
            results/
            mlruns/

      # 6 Post-training evaluation
      - name: Evaluate last run
        run: python scripts/evaluate_last_run.py

      # 7 Render Jupyter report
      - name: Render notebook
        run: |
          jupyter nbconvert --execute notebooks/run_report.ipynb --to notebook
